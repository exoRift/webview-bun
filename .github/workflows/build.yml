name: Build and Publish Webview Binaries

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }} / ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            arch: x64
          - os: ubuntu-24.04-arm
            arch: arm64
          - os: macos-15
            arch: arm64
          - os: windows-2022
            arch: x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Bun v1.2.15
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.15

      - name: Install deps — Linux
        if: runner.os == 'Linux'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            g++ cmake ninja-build \
            libgtk-4-dev libwebkitgtk-6.0-dev \
            || \
          sudo apt-get install -y \
            g++ cmake ninja-build \
            libgtk-3-dev libwebkit2gtk-4.1-dev

      - name: Install deps — macOS
        if: runner.os == 'macOS'
        shell: bash
        run: |
          brew update
          brew install cmake ninja
          # macOS provides its own WebKit framework

      - name: Install deps — Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install --yes cmake --installargs '"ADD_CMAKE_TO_PATH=System"'
          choco install --yes ninja
          choco install --yes mingw
          choco install --yes webview2-runtime
      - name: Build
        shell: bash
        run: |
          rm -rf ./build && \
          mkdir build && \
          bun install --frozen-lockfile && \
          bun run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: |
            ./build/libwebview-${{ matrix.arch }}.so
            ./build/libwebview.dylib
            ./build/libwebview.dll

  publish:
    name: Commit Binaries
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Copy binaries into repo
        shell: bash
        run: |
          rm -rf ./build && \
          mkdir build && \
          cp artifacts/**/*.* ./build

      - name: Commit & Push
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ./build/*
          git commit -m "Update Binaries" || echo "No changes to commit"
          git push
